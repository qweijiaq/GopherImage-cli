import { Module } from 'vuex';
import { RootState } from '@/app/app.store';
import { apiHttpClient } from '@/app/app.service';

export interface <%= storeStateName %> {
  loading: boolean;
}

export interface <%= actionParamType %> {
  data?: null;
}

export const <%= storeModuleName %>: Module<<%= storeStateName %>, RootState> = {
  /**
   * 命名空间
   */
  namespaced: true,

  /**
   * 数据
   */
  state: {
    loading: false,
  } as <%= storeStateName %>,

  /**
   * 获取器
   */
  getters: {
    loading(state) {
      return state.loading;
    },
  },

  /**
   * 修改器
   */
  mutations: {
    setLoading(state, data) {
      state.loading = data;
    },
  },

  /**
   * 动作
   */
  actions: {
    async <%= action %>({ commit }, <%= actionParam %>: <%= actionParamType %> = {}) {
      commit('setLoading', true);

      try {
        const response = await apiHttpClient.<%= method %>(`<%= api %>`);
        commit('setLoading', false);

        return response;
      } catch (error) {
        commit('setLoading', false);

        const _error = error as any;

        if (_error.response) {
          throw _error.response;
        }       
      }
    },    
  },

  /**
   * 模块
   */
  modules: {
  },
};